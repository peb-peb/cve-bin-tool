# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: GPL-3.0-or-later

import os

import pytest

from cve_bin_tool.helper_script import HelperScript
from cve_bin_tool.error_handler import UnknownArchiveType
from cve_bin_tool.log import LOGGER


class TestHelperScript:
    """Test the HelperScript class functions"""

    @pytest.mark.parametrize(
        "filename, product_name, version_name",
        [
            (
                "libsndfile-1.0.25-12.el7.x86_64.rpm",
                "libsndfile",
                "1.0.25",
            ),  # normal packages (with 2 '-')
            (
                "libsndfile-1.0.31-1-aarch64.pkg.tar.xz",
                "libsndfile",
                "1.0.31",
            ),  # .tar.xz packages (with 3 '-')
            (
                "logrotate_3.14.0-4ubuntu5_amd64.deb",
                "logrotate",
                "3.14.0-4ubuntu5",
            ),  # .deb packages (with 2 '_')
            (
                "libarchive_3.4.2-1_aarch64_cortex-a72.ipk",
                "libarchive",
                "3.4.2-1",
            ),  # .ipk packages (with 3 '_')
            (
                "tomcat9_9.0.37-3_all.deb",
                "tomcat9",
                "9.0.37-3",
            ),  # packages with digits in product_name
            (
                "openssh-client_8.4p1-5ubuntu1_amd64.deb",
                "openssh-client",
                "8.4p1-5ubuntu1",
            ),  # packages with '-' in product_name
        ],
    )
    def test_parse_filename(self, filename, product_name, version_name):
        hs = HelperScript(filename)
        assert (product_name, version_name) == hs.parse_filename(filename)

    # @pytest.mark.parametrize("filename", [
    #     "bash-4.2.46-34.el7.x86_64.abc" # unsupported file type
    # ])
    # def test_parse_filename(self, filename):
    #     hs = HelperScript(filename)
    #     with pytest.raises(UnknownArchiveType):
    #         hs.parse_filename(filename)

    def test_helper_script_output(self, capfd):
        """Test console output"""

        # testing "busybox-1.28.2-1.fc29.x86_64.rpm" present in condensed-downloads
        condensed_dir = os.path.join(os.path.dirname(__file__), "condensed-downloads")
        mock_filename = os.path.join(
            condensed_dir, "busybox-1.28.2-1.fc29.x86_64.rpm.tar.gz"
        )

        hs = HelperScript(
            mock_filename, product_name="busybox", version_number="1.28.2"
        )
        hs.extract_and_parse_file(mock_filename)
        hs.output()

        expected_output = '──────────────────────────────── BusyboxChecker ────────────────────────────────\n\n# Copyright (C) 2021 Intel Corporation\n# SPDX-License-Identifier: GPL-3.0-or-later\n\n\n"""\nCVE checker for busybox:\n\n<provide reference links here>\n"""\nfrom cve_bin_tool.checkers import Checker\n\n\nclass BusyboxChecker(Checker):\n\tCONTAINS_PATTERNS = [\n                r"BusyBox is a multi-call binary that combines many common \nUnix",\n                r"BusyBox is copyrighted by many authors between 1998-2015.",\n                r"BusyBox v1.28.2 (2018-03-26 14:47:05 UTC)",\n                r"crond (busybox 1.28.2) started, log level %d",\n                r"link to busybox for each function they wish to use and \nBusyBox",\n\t]\n\tFILENAME_PATTERNS = [\n                r"busybox", <--- this is a really common filename pattern\n\t]\n\tVERSION_PATTERNS = [\n                r"BusyBox v1.28.2 (2018-03-26 14:47:05 UTC)",\n                r"crond (busybox 1.28.2) started, log level %d",\n                r"SERVER_SOFTWARE=busybox httpd/1.28.2",\n                r"syslogd started: BusyBox v1.28.2",\n                r"tar (busybox) 1.28.2",\n                r"fsck (busybox 1.28.2)",\n\t]\n\tVENDOR_PRODUCT = [(\'busybox\', \'busybox\'), (\'rob_landley\', \'busybox\')]\n────────────────────────────────────────────────────────────────────────────────\n'
        # capturing output returned from HelperScript
        out, _ = capfd.readouterr()

        assert expected_output == out
